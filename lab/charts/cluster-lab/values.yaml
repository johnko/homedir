# Default values for cluster-lab.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

cluster:
  apps:
    argo-cd:
      annotations:
        argocd.argoproj.io/sync-wave: "2"
      destination:
        namespace: argocd
      source:
        path: lab/charts/argo-cd
        repoURL: &myrepo https://github.com/johnko/homedir.git
        helm:
          values:
            configs:
              cm:
                # https://codefresh.io/blog/argo-cd-application-dependencies/
                # https://argo-cd.readthedocs.io/en/stable/operator-manual/health/
                resource.customizations: |
                  argoproj.io/Application:
                    health.lua:
                      hs = {}
                      hs.status = "Progressing"
                      hs.message = ""
                      if obj.status ~= nil then
                        if obj.status.health ~= nil then
                          hs.status = obj.status.health.status
                          if obj.status.health.message ~= nil then
                            hs.message = obj.status.health.message
                          end
                        end
                      end
                      return hs
                  networking.k8s.io/Ingress:
                    health.lua:
                      hs = {}
                      hs.status = "Progressing"
                      if obj.status ~= nil then
                        if obj.status.loadBalancer ~= nil then
                          hs.status = "Healthy"
                        end
                      end
                      return hs
              params:
                server.insecure: true
            server:
              ingress:
                annotations:
                  traefik.ingress.kubernetes.io/router.entrypoints: websecure
                enabled: true
                hosts:
                - argocd.labcluster.local
      syncPolicy: {}
        # automated:
        #   prune: true
        #   selfHeal: true


    cert-manager:
      annotations:
        argocd.argoproj.io/sync-wave: "2"
      destination:
        namespace: cert-manager
      source:
        path: lab/charts/cert-manager
        repoURL: *myrepo
        helm:
          values:
            installCRDs: true
      syncPolicy: {}
        # automated:
        #   prune: true
        #   selfHeal: true


    coredns:
      annotations:
        argocd.argoproj.io/sync-wave: "1"
      destination:
        namespace: kube-system
      source:
        path: lab/charts/coredns
        repoURL: *myrepo
        helm:
          values:
            affinity:
              podAntiAffinity:
                requiredDuringSchedulingIgnoredDuringExecution:
                - labelSelector:
                    matchExpressions:
                    - key: k8s-app
                      operator: In
                      values:
                      - coredns
                  topologyKey: kubernetes.io/hostname
            fullnameOverride: coredns
            k8sAppLabelOverride: kube-dns
            podDisruptionBudget:
              minAvailable: 1
            priorityClassName: system-cluster-critical
            replicaCount: 1
            rollingUpdate:
              maxUnavailable: 0
            servers:
            - plugins:
              - name: errors
              - configBlock: |-
                  lameduck 5s
                name: health
              - name: ready
              - configBlock: |-
                  class error
                name: log
                parameters: .
              - configBlock: |-
                  pods insecure
                  fallthrough in-addr.arpa ip6.arpa
                name: kubernetes
                parameters: cluster.local in-addr.arpa ip6.arpa
              - configBlock: |-
                  ttl 60
                  reload 15s
                  fallthrough
                name: hosts
                parameters: /etc/coredns/NodeHosts
              - name: prometheus
                parameters: :9153
              - name: forward
                parameters: . 1.1.1.1 8.8.8.8
              - name: cache
                parameters: 30
              - name: loop
              - name: reload
              - name: loadbalance
              port: 53
              zones:
              - zone: .
            service:
              name: kube-dns
            serviceAccount:
              create: true
              name: coredns
            tolerations:
            - key: CriticalAddonsOnly
              operator: Exists
      syncPolicy: {} # disable autosync to avoid port name flipflops


    metrics-server:
      annotations:
        argocd.argoproj.io/sync-wave: "1"
      destination:
        namespace: kube-system
      source:
        path: lab/charts/metrics-server
        repoURL: *myrepo
        helm:
          values:
            args:
            - --kubelet-insecure-tls
            containerPort: 4443
            nodeSelector:
              kubernetes.io/arch: amd64
              kubernetes.io/os: linux
            updateStrategy:
              rollingUpdate:
                maxSurge: 25%
                maxUnavailable: 0
              type: RollingUpdate
      syncPolicy: {}
        # automated:
        #   prune: true
        #   selfHeal: true


    namespaces:
      annotations:
        argocd.argoproj.io/sync-wave: "1"
      destination:
        namespace: argocd
      source:
        path: lab/charts/namespaces
        repoURL: *myrepo
        helm:
          values:
            namespaces:
            - argocd
            - cert-manager
            - istio-system
            - knative-serving
            - openfaas
            - openfaas-fn
            - pihole
            - rook-ceph
            - traefik
      syncPolicy: {}
        # automated:
        #   prune: false
        #   selfHeal: true


    pihole:
      annotations:
        argocd.argoproj.io/sync-wave: "3"
      destination:
        namespace: pihole
      source:
        path: lab/charts/pihole
        repoURL: *myrepo
        helm:
          values:
            dnsmasq:
              customDnsEntries:
              - address=/labcluster/192.168.2.9
              - address=/argocd.labcluster.local/192.168.2.9
              - address=/pihole.labcluster.local/192.168.2.9
            extraEnvVars:
              DNSMASQ_USER: root
            podDnsConfig:
              enabled: true
              nameservers:
              - 1.1.1.1
              - 8.8.8.8
              policy: None
            serviceDhcp:
              enabled: false
            serviceDns:
              loadBalancerIP: 192.168.2.9
              type: ClusterIP
            serviceWeb:
              loadBalancerIP: 192.168.2.9
              type: ClusterIP
      syncPolicy: {}
        # automated:
        #   prune: true
        #   selfHeal: true


    traefik:
      annotations:
        argocd.argoproj.io/sync-wave: "2"
      destination:
        namespace: traefik
      source:
        path: lab/charts/traefik
        repoURL: *myrepo
        helm:
          values:
            deployment:
              kind: DaemonSet
            logs:
              general:
                level: DEBUG
            podSecurityContext: # danger but needed if listening on port 53
              runAsNonRoot: false
              runAsUser: 0
            ports:
              dnstcp:
                expose: true
                exposedPort: 53
                port: 53
                protocol: TCP
              dnsudp:
                expose: true
                exposedPort: 53
                port: 53
                protocol: UDP
            securityContext: # danger but needed if listening on port 53
              capabilities:
                add:
                - NET_BIND_SERVICE
            service:
              externalIPs:
              - 192.168.2.9  # LABCLUSTER_IP
              type: ClusterIP
      syncPolicy: {}
        # automated:
        #   prune: true
        #   selfHeal: true
