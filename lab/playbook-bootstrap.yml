# https://www.cyberciti.biz/faq/ansible-apt-update-all-packages-on-ubuntu-debian-linux/

- hosts: ubuntu
  become: true
  become_user: root
  tasks:
    - name: Update apt repo and cache on all Debian/Ubuntu boxes
      apt:
        update_cache: true
        force_apt_get: true
        cache_valid_time: 3600

    - name: Install docker
      apt:
        name: docker
        force_apt_get: true

    - name: Copy healthcheck scripts
      copy:
        src: ./healthcheck/healthcheck-diff.sh
        dest: /sbin/healthcheck-diff.sh
        force: true
        mode: '755'
    - name: Copy healthcheck crontab
      copy:
        src: ./healthcheck/healthcheck_cron
        dest: /etc/cron.d/healthcheck_cron # required no dot in filename
        force: true
        mode: '644'
    - name: Force cron.d to reload
      shell: touch /etc/cron.d

    - name: Check /etc/issue version
      shell: cat /etc/issue | grep -q "{{ ansible_facts['lsb']['description'] }}" && echo "0" || echo "1"
      register: ISSUE
    - name: Refresh base-files if OS version mismatched
      # found that /etc/issue is installed by base-files: dpkg -S /etc/issue
      shell: rm -v /etc/issue ; apt-get install --reinstall -y -o Dpkg::Options::="--force-confmiss" base-files
      register: BASEFILES
      when: (ISSUE.stdout | int) > 0
    - debug:
        var: BASEFILES.stdout_lines
      when: (ISSUE.stdout | int) > 0

    - name: Upgrade all packages on servers
      apt:
        upgrade: dist
        force_apt_get: true
    - name: Cleanup apt on servers
      apt:
        clean: true
        force_apt_get: true

    - name: Check if a reboot is needed on all servers
      register: reboot_required_file
      stat:
        path: /var/run/reboot-required
        get_md5: false
    - name: Reboot the box if kernel updated
      reboot:
        msg: "Reboot initiated by Ansible for kernel updates"
        connect_timeout: 5
        reboot_timeout: 300
        pre_reboot_delay: 0
        post_reboot_delay: 30
        test_command: uptime
      when: reboot_required_file.stat.exists
