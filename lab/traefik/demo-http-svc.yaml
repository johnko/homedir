# https://github.com/kubernetes/ingress-nginx/blob/main/docs/examples/http-svc.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: http-svc
spec:
  replicas: 1
  selector:
    matchLabels:
      app: http-svc
  template:
    metadata:
      labels:
        app: http-svc
    spec:
      containers:
      - name: http-svc
        image: registry.k8s.io/e2e-test-images/echoserver:2.3
        ports:
        - containerPort: 8080
        env:
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                fieldPath: spec.nodeName
          - name: POD_NAME
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          - name: POD_IP
            valueFrom:
              fieldRef:
                fieldPath: status.podIP

---

apiVersion: v1
kind: Service
metadata:
  name: http-svc
  labels:
    app: http-svc
spec:
  ports:
  - port: 8081
    targetPort: 8080
    protocol: TCP
    name: http
  selector:
    app: http-svc

---

# https://docs.k0sproject.io/v1.23.6+k0s.2/examples/nginx-ingress/
# curl -v -H 'Host: demo.lab.local' $LABCLUSTER_IP:$(kubectl get svc -n ingress nginx-ingress-microk8s-controller -o yaml | grep nodePort | head -n1 | tr -d ' ' | cut -d: -f2)

# apiVersion: networking.k8s.io/v1
# kind: Ingress
# metadata:
#   annotations:
#     nginx.ingress.kubernetes.io/proxy-body-size: "0"
#     nginx.ingress.kubernetes.io/proxy-read-timeout: "600"
#     nginx.ingress.kubernetes.io/proxy-send-timeout: "600"
#   name: http-svc
# spec:
#   ingressClassName: nginx
#   rules:
#   - host: demo.lab.local
#     http:
#       paths:
#       - path: /
#         pathType: Prefix
#         backend:
#           service:
#             name: http-svc
#             port:
#               number: 8081

---

# https://www.kubecost.com/kubernetes-devops-tools/traefik-vs-nginx/
# curl -v -H 'Host: demo.lab.local' $LABCLUSTER_IP:$(kubectl get svc -n traefik traefik -o yaml | grep nodePort | head -n1 | tr -d ' ' | cut -d: -f2)

apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: http-svc
  annotations:
    traefik.ingress.kubernetes.io/router.entrypoints: web
spec:
  rules:
    - host: demo.lab.local
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: http-svc
                port:
                  number: 8081
